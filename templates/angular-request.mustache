var url = domain + path;
{{#isGET}}
var cacheId = url + '?' + {{&className}}.transformRequest(queryParameters);
var cached = parameters.$cache && parameters.$cache.get(cacheId);

if(cached !== undefined && parameters.$refresh !== true) {
    deferred.resolve(cached);
    return deferred.promise;
}
{{/isGET}}
var options = {
    timeout: parameters.$timeout,
    method: '{{method}}',
    url: url,
    params: queryParameters,
    data: body,
    headers: headers
};
if(Object.keys(form).length > 0) {
   options.data = form;
   options.headers['Content-Type'] = 'application/x-www-form-urlencoded';
   options.transformRequest = {{&className}}.transformRequest;
}
$http(options)
.success(function(data, status, headers, config) {
    var res = {
        data: data,
        status: status,
        headers: headers,
        config: config
    };

    deferred.resolve(res);

    if(parameters.$cache !== undefined) {
        if('{{method}}' === 'GET') {
            parameters.$cache.put(cacheId, res, parameters.$cacheItemOpts ? parameters.$cacheItemOpts : {});
        } else if ('{{method}}' === 'POST' || '{{method}}' === 'PUT' || '{{method}}' === 'DELETE' || '{{method}}' === 'PATCH') {
          parameters.$cache.removeAll();
        }
    }
})
.error(function(data, status, headers, config){
    var res = {
        data: data,
        status: status,
        headers: headers,
        config: config
    };

    deferred.reject(res);
});
